<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.fantasybabymg.dao.IUserDao">
  	<resultMap type="user" id="userMap">
  		<result column="_id" property="_id" />
  	    <result column="username" property="userName" />
  	    <result column="password" property="passWord" />
  	    <result column="status" property="status" />
  	    <result column="create_date" property="createDate" />
  	    <result column="modify_date" property="modifyDate" />
  	    <association property="userDetail" column="ud" javaType="userDetail">
	  	    <result column="name" property="name" />
	  	    <result column="nickname" property="nickname" />
	  	    <result column="sex" property="sex" />
	  	    <result column="phone" property="phone" />
	  	    <result column="email" property="email" />
	  	    <result column="address" property="address" />
	  	    <result column="hometown" property="hometown" />
	  	    <result column="profession" property="profession" />
	  	    <result column="image" property="image" />
  	    </association>
  	    <association property="category" column="ca" javaType="category">
  	    	<result column="_id" property="_id" />
	  	    <result column="categoryname" property="categoryName" />
	  	    <result column="create_date" property="createDate" />
  	    </association>
  	</resultMap>
  	<sql id="userColumn">
	  _id,
	  username,
	  passWord,
	  create_date
	 </sql>
  	<insert id="addUser" parameterType="user" useGeneratedKeys="true" keyProperty="_id">
  		INSERT INTO blog_user(_uuid,username,password,status,categoryid,create_date) VALUES(#{_uuid},#{userName},#{passWord},#{status},
  		#{category._id},now());
  	</insert>
  	<select id="findUserAllInformation" parameterType="map" resultMap="userMap">
  		SELECT bu.`_id`,bu.`username`,bu.`PASSWORD`,bu.`STATUS`,bu.`create_date`,bu.`modify_date`,
				ud.`NAME`,ud.`nickname`,ud.`phone`,ud.`profession`,ud.`address`,ud.`hometown`,ud.`image`,ud.`sex`,
				ca.`categoryname`
				FROM blog_user bu LEFT JOIN user_detail ud ON bu.`_id` = ud.`userid`
 				LEFT JOIN _category ca ON ca.`_id` = bu.`categoryid` 
 				<if test="map != null">
		  		where 
		  		</if> 
  	</select>
  	<delete id="deleteUser"  parameterType="int">
  		delete from blog_user where _id=#{id}
  	</delete>
  	<!-- <update id="update" parameterType="account">
     	update t_account
		<set>
			<if test="name != null and name != '' ">
				NAME = #{name},
			</if>
			<if test="passWord != null and passWord != '' ">
				PASSWORD = #{passWord},
			</if>
			<if test="gender != null ">
				GENDER = #{gender},
			</if>
			<if test="photo!= null and  photo != '' ">
				PHOTO = #{photo},
			</if>
		</set>
		where ID = #{id}
  	</update> -->
  	
  	<!-- <select id="load"  parameterType="int" resultType="account">
		select * from t_account where id=#{id}
  	</select>
  	<select id="findAll" resultMap="accountMap">
  		select *from t_account
  	</select>
  	<select id="findPager" parameterType="map" resultMap="accountMap">
  		SELECT *FROM t_account LIMIT #{pageStart},#{pageEnd} 
  	</select>
  	<select id="findPageCount"  resultType="int">
  		SELECT count(id) FROM t_account  
  	</select> -->
  </mapper>